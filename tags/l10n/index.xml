<?xml-stylesheet type="text/xsl" href="#stylesheet"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><xsl:stylesheet id="stylesheet" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsl"><xsl:output method="html" doctype-system="about:legacy-compat"/><xsl:template match="/rss"><html lang="ru-ru"><head><meta name="viewport" content="width=device-width, initial-scale=1.0"/><title>l10n RSS | vanadium23</title><link rel="stylesheet" href="https://vanadium23.me/css/base.min.ede35a5a6f0822c8ed4e62a02aaaead5a369281f08df87a8547512ed5449222f.css" integrity="sha256-7eNaWm8IIsjtTmKgKqrq1aNpKB8I34eoVHUS7VRJIi8="/></head><body><nav class="u-background"><div class="u-wrapper Banner"><a class="Banner-link u-clickable" href="https://vanadium23.me/">
vanadium23</a><ul class="Banner"><li class="Banner-item"><a class="Banner-link u-clickable" href="https://vanadium23.me/about/">About</a></li class="Banner-item"><li class="Banner-item"><a class="Banner-link u-clickable" href="https://vanadium23.me/tags/">Tags</a></li class="Banner-item"><li><a id="themeSwitch" class="theme-switcher"/></li></ul></div></nav><main><div class="u-wrapper"><div class="u-padding"><h2 class="Heading-title"><a class="Heading-link u-clickable" href="https://vanadium23.me/tags/l10n/index.xml" rel="bookmark">l10n RSS</a></h2></div></div></main><footer class="Footer"><div class="u-wrapper"><div class="u-padding"><a href="https://github.com/vanadium23"><i class="svg-icon github"/></a><a href="https://www.linkedin.com/in/vanadium23"><i class="svg-icon linkedin"/></a><a href="https://www.twitter.com/vanadium23"><i class="svg-icon twitter"/></a><a href="http://stackoverflow.com/users/4809450/vanadium23"><i class="svg-icon stackoverflow"/></a><a href="https://www.codewars.com/users/vanadium23"><i class="svg-icon codewars"/></a><a href="https://goodreads.com/vanadium23"><i class="svg-icon goodreads"/></a><a href="https://t.me/chernov_sharit"><i class="svg-icon telegram"/></a></div></div></footer></body></html></xsl:template></xsl:stylesheet><channel><title>l10n on vanadium23</title><link>https://vanadium23.me/tags/l10n/</link><description>Recent content in l10n on vanadium23</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 26 Nov 2016 17:00:00 +0300</lastBuildDate><atom:link href="https://vanadium23.me/tags/l10n/index.xml" rel="self" type="application/rss+xml"/><item><title>Say hello to l10n in python</title><link>https://vanadium23.me/l10n-in-python/</link><pubDate>Sat, 26 Nov 2016 17:00:00 +0300</pubDate><guid>https://vanadium23.me/l10n-in-python/</guid><description>&lt;p>In python world, many solutions for trivial problems could be found in standart library: from &lt;a href="https://docs.python.org/3/library/statistics.html">statistical functions&lt;/a> to &lt;a href="https://docs.python.org/3/library/gettext.html">localization&lt;/a> for your package.
But somehow some things just don&amp;rsquo;t connect to each other, and you just stuck at combining this constructor in right way.&lt;/p>
&lt;p>This gifs pretty sums up situation:&lt;/p>
&lt;p>&lt;img src="https://vanadium23.me/images/modern-development.gif" alt="modern-development">&lt;/p>
&lt;p>Our task:&lt;/p>
&lt;ul>
&lt;li>create python package, that has localized string&lt;/li>
&lt;li>provide this string to django application&lt;/li>
&lt;/ul>
&lt;p>First thing, that you find at &lt;a href="https://docs.python.org/3/library/gettext.html">gettext docs&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>import gettext
import os
BASE_DIR = os.path.dirname(__file__)
LOCALE_DIR = os.path.join(BASE_DIR, &amp;#39;locale&amp;#39;)
# try to set param fallback to False
t = gettext.translation(&amp;#39;default&amp;#39;, LOCALE_DIR, fallback=True)
_ = t.ugettext
message = _(&amp;#39;Test!&amp;#39;)
print(message)
&lt;/code>&lt;/pre>&lt;p>To change language on your system, you can simply set enviroment variable &lt;em>LANG&lt;/em> or &lt;em>LANGUAGE&lt;/em>.&lt;/p>
&lt;pre tabindex="0">&lt;code>~ export LANG=ru
~ python test.py
Test!
&lt;/code>&lt;/pre>&lt;p>This won&amp;rsquo;t work, because you don&amp;rsquo;t have translated phrases in your locale dir. Let&amp;rsquo;s compile them.
Command pygettext grabs all string in &lt;em>ugettext&lt;/em> function and dumps it to pot file.
After it, you need to init new locale (&lt;em>note:&lt;/em> if you need to merge with previos translations use &lt;em>msgmerge&lt;/em>).&lt;/p>
&lt;pre tabindex="0">&lt;code>~ pygettext test.py
~ mkdir -p ./locale/{en,ru}/LC_MESSAGES/
~ msginit --input=messages.pot --locale=en_US.UTF-8 \
--output=./locale/en/LC_MESSAGES/default.po
~ msginit --input=messages.pot --locale=ru_RU.UTF-8 \
--output=./locale/ru/LC_MESSAGES/default.po
~ rm messages.pot
&lt;/code>&lt;/pre>&lt;p>Now you can open default.po files with some tools, like &lt;a href="https://poedit.net/">POEdit&lt;/a> (&lt;em>note:&lt;/em> I prefer Sublime Text for small po).
Change in ru po msgstr from &amp;lsquo;Test!&amp;rsquo; to &amp;lsquo;Тест!&amp;rsquo;. When you run script again, output will be same (&amp;lsquo;Test!&amp;rsquo;).
This is because after modifying po, we need to compile it to binary format (known as mo).&lt;/p>
&lt;pre tabindex="0">&lt;code>~ msgfmt en/LC_MESSAGES/default.po -o en/LC_MESSAGES/default.mo
~ msgfmt ru/LC_MESSAGES/default.po -o ru/LC_MESSAGES/default.mo
&lt;/code>&lt;/pre>&lt;p>Woo-hoo, output should be translated now, but it doesn&amp;rsquo;t work with django.
What shall we do? Read the &lt;a href="https://docs.djangoproject.com/en/1.10/topics/i18n/translation/#how-django-discovers-translations">manual&lt;/a>.
So we need to rename namespace from default to django, but also django realize &lt;a href="https://github.com/django/django/blob/1.10.3/django/utils/translation/trans_real.py#L90">own class&lt;/a>, so insted of using gettext.translation.ugettext you need to use &lt;em>django.utils.translation&lt;/em> one.
Full example can be found in &lt;a href="https://github.com/vanadium23/py-hello-l10n">repository&lt;/a>.&lt;/p></description></item></channel></rss>