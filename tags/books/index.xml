<?xml version="1.0" encoding="utf-8" standalone="yes" ?>




<?xml-stylesheet type="text/xsl" href="#stylesheet" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <xsl:stylesheet id="stylesheet" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" exclude-result-prefixes="xsl">
    <xsl:output method="html" doctype-system="about:legacy-compat" />
    <xsl:template match="/rss">
      <html lang="ru-ru">
        <head>
          <meta name="viewport" content="width=device-width, initial-scale=1.0" />
          <title>Books RSS | vanadium23</title>
          <link rel="stylesheet" href="https://vanadium23.me/css/base.min.34ac18bc3a855e272b475cf37b39ff5a4782c6c135d52b81107686678deaa01a.css" integrity="sha256-NKwYvDqFXicrR1zzezn/WkeCxsE11SuBEHaGZ43qoBo=" />
        </head>
        <body>
          <nav class="u-background">
    <div class="u-wrapper">
        <ul class="Banner">
            <li class="Banner-item Banner-item--title">
                <a class="Banner-link u-clickable" href="https://vanadium23.me/">
                    vanadium23
                </a>
            </li>
        
        <li class="Banner-item">
            <a class="Banner-link u-clickable" href="https://vanadium23.me/tags/dev/">Dev (Eng)</a>
        </li>
        
        <li class="Banner-item">
            <a class="Banner-link u-clickable" href="https://vanadium23.me/about/">About</a>
        </li>
        
        <li class="Banner-item">
            <a class="Banner-link u-clickable" href="https://vanadium23.me/tags/">Tags</a>
        </li>
        
        </ul>
    </div>
</nav>
          <main>
            <div class="u-wrapper">
              <div class="u-padding">
                <h2 class="Heading-title">
                  
                  <a class="Heading-link u-clickable" href="https://vanadium23.me/tags/books/index.xml" rel="bookmark">Books RSS</a>
                  
                </h2>
                
              </div>
            </div>
          </main>
          
<footer class="Footer">
  <div class="u-wrapper">
    <div class="u-padding">
        
        <a href="https://github.com/vanadium23"><i class="svg-icon github"></i></a>
        <a href="https://www.linkedin.com/in/vanadium23"><i class="svg-icon linkedin"></i></a>
        <a href="https://www.twitter.com/vanadium23"><i class="svg-icon twitter"></i></a>
        <a href="http://stackoverflow.com/users/4809450/vanadium23"><i class="svg-icon stackoverflow"></i></a>
        <a href="https://www.codewars.com/users/vanadium23"><i class="svg-icon codewars"></i></a>
    </div>
  </div>
</footer>

        </body>
      </html>
    </xsl:template>
  </xsl:stylesheet>
  <channel>
    <title>Books on vanadium23</title>
    <link>https://vanadium23.me/tags/books/</link>
    <description>Recent content in Books on vanadium23</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Fri, 15 Mar 2019 17:00:00 +0300</lastBuildDate>
    <atom:link href="https://vanadium23.me/tags/books/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Краткий пересказ книги &#34;Architecturing for Scale&#34;</title>
      <link>https://vanadium23.me/architecting-for-scale/</link>
      <pubDate>Fri, 15 Mar 2019 17:00:00 +0300</pubDate>
      <guid>https://vanadium23.me/architecting-for-scale/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/38096544&#34;&gt;Книга&lt;/a&gt; мне понравилась своей лаконичностью так, что советую прочитать чеклист на основе её и сделать вывод хотите ли вы читать её полностью. Весь чек лист разбит на основе оглавления из книги, поэтому можете читать выборочно.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Здесь и далее следует понимать, что все примеры старались проводиться либо из опыта, либо на основе типичного магазина по продаже футболок&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;доступность&#34;&gt;Доступность&lt;/h2&gt;

&lt;h3 id=&#34;в-чем-разница-между-надежностью-и-доступностью&#34;&gt;В чем разница между надежностью и доступностью?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Надежность - способность системы выполнять требуемые действия, не допуская ошибок.&lt;/li&gt;
&lt;li&gt;Доступность - готовность системы к работе при необходимости выполнить требуемые действия.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;как-улучшить-доступность&#34;&gt;Как улучшить доступность?&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Учитывайте возможные отказы&lt;/li&gt;
&lt;li&gt;Всегда помните о масштабировании (прим. от меня и ограничениях)&lt;/li&gt;
&lt;li&gt;Смягчайте последствия рисков (понравился пример что если не работает поиск на сайте футболок, выдавайте временно топ предложения)&lt;/li&gt;
&lt;li&gt;Контролируйте доступность (== мониторинг)&lt;/li&gt;
&lt;li&gt;Disaster recovery policy (прим. от меня старайтесь строить self-recovering processes в системах)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;какая-доступность-является-нормальная&#34;&gt;Какая доступность является нормальная?&lt;/h3&gt;

&lt;p&gt;Определите сами на основе таблицы:
99%     - 432 минуты даунтайма в месяц
99,9%   - 43 минуты
99,99%  - 4 минуты
99,999% - 26 секунд&lt;/p&gt;

&lt;h2 id=&#34;управление-рисками&#34;&gt;Управление рисками&lt;/h2&gt;

&lt;h3 id=&#34;принцип-управления-рисками&#34;&gt;Принцип управления рисками&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Составить матрицу рисков (&lt;a href=&#34;https://www.architectingforscale.com/files/Risk%20Matrix%20Template.xlsx&#34;&gt;шаблон&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Важно понимать, что у риска есть вероятность и критичность, для этого примеры:

&lt;ul&gt;
&lt;li&gt;Список топ-10 футболок: низкая вероятность и низкая критичность.&lt;/li&gt;
&lt;li&gt;База данных с заказами: низкая вероятность и высокая критичность.&lt;/li&gt;
&lt;li&gt;Загрузка сторонних шрифтов: высокая вероятность и низкая критичность.&lt;/li&gt;
&lt;li&gt;Фотографии футболок: высокая вероятность и высокая критичность.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Ликвидация самых опасных рисков.&lt;/li&gt;
&lt;li&gt;Смягчение последствий рисков, которые нельзя исключить.&lt;/li&gt;
&lt;li&gt;Итерируй матрицу рисков или см п.1&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Дальше в главе написано примеры конкретных действий по каждому из пунктов.
Из интересного забавным показалось, что можем сделать запас на 6 серверов приложения, но они все в одной стойке/питании и на самом деле это не резервирование. (Привет, Selectel)&lt;/p&gt;

&lt;h2 id=&#34;сервисы&#34;&gt;Сервисы&lt;/h2&gt;

&lt;h3 id=&#34;что-такое-сервис&#34;&gt;Что такое сервис&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Собственная кодовая база&lt;/li&gt;
&lt;li&gt;Управлять собственными данными&lt;/li&gt;
&lt;li&gt;Предоставлять возможности другим сервисам&lt;/li&gt;
&lt;li&gt;Пользоваться возможностями других сервисов&lt;/li&gt;
&lt;li&gt;Иметь единственного владельца-команду.

&lt;ul&gt;
&lt;li&gt;В книге уточняется что одна команда может владеть несколькими сервисами, но не наоборот. (P.s. не согласен полностью)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;как-делить&#34;&gt;Как делить&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Разделение по бизнес-требованиям (legal, security)&lt;/li&gt;
&lt;li&gt;Разделение по зонам ответственности (management)&lt;/li&gt;
&lt;li&gt;Разделение по роду данных (domain)&lt;/li&gt;
&lt;li&gt;Разделение возможностей или информации (reusable apps)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;сложности&#34;&gt;Сложности&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Нет общей картины&lt;/li&gt;
&lt;li&gt;Благоприятная среда для сбоев и ошибок&lt;/li&gt;
&lt;li&gt;Сложно внести изменения&lt;/li&gt;
&lt;li&gt;Возрастает количество зависимостей&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Была отдельная большая глава про обработку ошибок от сервисов и постепенной деградации.&lt;/p&gt;

&lt;h2 id=&#34;масштабирование-сервисов&#34;&gt;Масштабирование сервисов&lt;/h2&gt;

&lt;h3 id=&#34;запас-на-две-ошибки&#34;&gt;Запас на две ошибки&lt;/h3&gt;

&lt;p&gt;Правило лётчиков в том, что если ты не можешь сделать манёвр, то у тебя должен быть запас высоты на две ошибки.
Очень клёвое правило и дальше были простые вычисления для примера:
Есть сервис на 300 rps, сколько нужно узлов для 1000 rps?
Очевидный ответ - 4 (&lt;sup&gt;1000&lt;/sup&gt;&amp;frasl;&lt;sub&gt;300&lt;/sub&gt; ~ 3.33, ближайшее целое 4), но в этой ситуации при выходе из строя ноды каждая получает 333 rps и это вызовет каскадный отказ. При 5 узлах мы начинаем работать когда вышибает одну ноду, но если идёт деплой и вышибло одну ноду, то снова скатываемся в предыдущую ситуацию, поэтому идеально иметь запас на две ошибки.&lt;/p&gt;

&lt;h3 id=&#34;домашка&#34;&gt;Домашка&lt;/h3&gt;

&lt;p&gt;Сколько нужно узлов для обработки 10000 rps, если одна нода обрабатывает 300 rps?
Если у нас два датацентра и нам необходимо обеспечить отказ на уровне датацентра?
А если у нас 6 дата центров? :)&lt;/p&gt;

&lt;h3 id=&#34;владение-сервисами&#34;&gt;Владение сервисами&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Все сервисы закреплены за командами разработки&lt;/li&gt;
&lt;li&gt;Ни один сервис не закреплен за несколькими командами&lt;/li&gt;
&lt;li&gt;Команда может отвечать за несколько сервисов&lt;/li&gt;
&lt;li&gt;На командах полный цикл: от архитектуры до мониторинга и решения проблем&lt;/li&gt;
&lt;li&gt;Между сервисами есть четкие границы и документированное API&lt;/li&gt;
&lt;li&gt;Между сервисами установлено SLA, о нарушениях которых оповещается команда-владелец&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;классы-сервисов&#34;&gt;Классы сервисов&lt;/h3&gt;

&lt;p&gt;Класс сервиса - это метка присвоенная, сервису которая означает насколько важен данный сервис для функционирования бизнеса.
* Класс 1 - тяжелые последствия, пример: сервис обработки заказов
* Класс 2 - неприятное взаимодействие с сервисом для клиента, пример: сервис поиска
* Класс 3 - незаметное или почти незаметное взаимодействие, пример: сервис рекомендаций
* Класс 4 - никакого негативного влияния на клиентов, пример: сервис генерации отчётов&lt;/p&gt;

&lt;h3 id=&#34;использование-классов-сервисов&#34;&gt;Использование классов сервисов&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ожидания - какая у сервиса должна быть надёжность и доступность?&lt;/li&gt;
&lt;li&gt;Реагирование - насколько быстро надо реагировать на проблему в сервисе?&lt;/li&gt;
&lt;li&gt;Зависимости - какие классы у сервисов от которых зависите? Как мы должны обрабатывать отказы: деградировать или умирать?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sla&#34;&gt;SLA&lt;/h3&gt;

&lt;p&gt;Почему SLA важны и особенно внутренние?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Создание доверия&lt;/li&gt;
&lt;li&gt;Упрощение диагностики проблем&lt;/li&gt;
&lt;li&gt;Измерение производительности&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Как ставить SLA?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SLA должны быть релевантны потребителям иначе они не SLA&lt;/li&gt;
&lt;li&gt;Желательно, иметь как можно меньше метрик&lt;/li&gt;
&lt;li&gt;Желательно, иметь одни SLA на всех потребителей&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Примеры SLA про магазин высокоуровнего:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Доступность - &amp;ldquo;наш магазин доступен не менее чем 99,4% времени&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Время загрузки - &amp;ldquo;страницы открываются менее чем за 4 с в 99% случаях&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Продукты - &amp;ldquo;как минимум 80% наших товаров в каталоге находится на складе&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;облачные-сервисы&#34;&gt;Облачные сервисы&lt;/h2&gt;

&lt;p&gt;Там было про AWS, Lambda и прочее. Похоже на маркетинговый булшит, ничего полезного.&lt;/p&gt;

&lt;h2 id=&#34;вопросы-к-сервисам-на-основе-предложенной-книги&#34;&gt;Вопросы к сервисам на основе предложенной книги&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Есть ли у вас матрица рисков?&lt;/li&gt;
&lt;li&gt;Есть ли SLA для сервисов?&lt;/li&gt;
&lt;li&gt;Есть ли несколько команд, которые владеют одним сервисом?&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>